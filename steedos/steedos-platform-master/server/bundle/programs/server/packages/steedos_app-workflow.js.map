{"version":3,"sources":["meteor://💻app/packages/steedos:app-workflow/checkNpm.js","meteor://💻app/packages/steedos_app-workflow/core.coffee","meteor://💻app/core.coffee","meteor://💻app/packages/steedos_app-workflow/server/methods/flow_copy.coffee","meteor://💻app/packages/steedos_app-workflow/server/methods/distribute.coffee","meteor://💻app/packages/steedos_app-workflow/cfs/instances.coffee","meteor://💻app/cfs/instances.coffee"],"names":["checkNpmVersions","module","link","v","eval","WorkflowCore","Meteor","isClient","openFlowDesign","locale","space","flow","companyId","flowName","iframe_url","ref","title","url","toLocaleLowerCase","Creator","isSpaceAdmin","userId","encodeURIComponent","Steedos","absoluteUrl","t","db","flows","findOne","name","openWindow","openFormDesign","form","Modal","show","formId","keyboard","backdrop","startup","$","document","keydown","e","keyCode","key","length","target","tagName","closest","hasClass","click","isServer","checkCreatePermissions","spaceId","uid","company_id","getCollection","find","_id","count","workflowMethods","require","methods","flow_copy","flowId","options","apply","arguments","get_distribute_flows","update_distribute_settings","flow_id","distribute_optional_users_id","step_flows","distribute_to_self","distribute_end_notification","upload_after_being_distributed","fs_store","ref1","ref2","store_name","settings","cfs","store","FS","Store","OSS","aliyun","S3","aws","STEEDOSCLOUD","steedosCloud","FileSystem","path","join","process","env","STEEDOS_STORAGE_DIR","fileKeyMaker","fileObj","absolutePath","extention","filename","filenameInStore","final_filename","ins_id","mkdirp","month","name_split","now","pathname","year","_getInfo","split","pop","substring","Date","getFullYear","getMonth","metadata","instance","resolve","sync","collectionName","Collection","stores","allow","download"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,gBAAJ;AAAqBC,MAAM,CAACC,IAAP,CAAY,oCAAZ,EAAiD;AAACF,kBAAgB,CAACG,CAAD,EAAG;AAACH,oBAAgB,GAACG,CAAjB;AAAmB;;AAAxC,CAAjD,EAA2F,CAA3F;AAGrBH,gBAAgB,CAAC;AAChBI,MAAI,EAAE;AADU,CAAD,EAEb,sBAFa,CAAhB,C;;;;;;;;;;;;ACHA,KAACC,YAAD,GAAgB,EAAhB;;AAEA,IAAGC,OAAOC,QAAV;AACCF,eAAaG,cAAb,GAA8B,UAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB;AAC7B,QAAAC,QAAA,EAAAC,UAAA,EAAAC,GAAA,EAAAC,KAAA,EAAAC,GAAA;AAAAA,UAAM,oCAAkCR,OAAOS,iBAAP,EAAlC,GAA6D,YAA7D,GAAyER,KAA/E;;AACA,QAAGC,IAAH;AACCM,YAAMA,OAAM,aAAWN,IAAjB,CAAN;ACEE;;ADDH,QAAGC,aAAa,CAACO,QAAQC,YAAR,CAAqBV,KAArB,EAA4BJ,OAAOe,MAAP,EAA5B,CAAjB;AACCJ,YAAMA,OAAM,gBAAcL,SAApB,CAAN;ACGE;;ADDHK,UAAMK,mBAAmBC,QAAQC,WAAR,CAAoBP,GAApB,CAAnB,CAAN;AACAD,YAAQ,KAAGS,EAAE,mBAAF,CAAX;;AACA,QAAGd,IAAH;AACCE,iBAAA,CAAAE,MAAAW,GAAAC,KAAA,CAAAC,OAAA,CAAAjB,IAAA,aAAAI,IAAmCc,IAAnC,GAAmC,MAAnC;;AACA,UAAGhB,QAAH;AACCG,gBAAWH,WAAS,KAAT,GAAcG,KAAzB;AAHF;ACOG;;ADHHA,YAAQM,mBAAmBN,KAAnB,CAAR;AACAF,iBAAa,gCAA8BG,GAA9B,GAAkC,SAAlC,GAA2CD,KAAxD;ACKE,WDJFO,QAAQO,UAAR,CAAmBP,QAAQC,WAAR,CAAoBV,UAApB,CAAnB,CCIE;ADnB2B,GAA9B;;AAgBAT,eAAa0B,cAAb,GAA8B,UAACtB,MAAD,EAASC,KAAT,EAAgBsB,IAAhB,EAAsBpB,SAAtB;ACM3B,WDLFqB,MAAMC,IAAN,CAAW,YAAX,EAAyB;AAACC,cAAQH;AAAT,KAAzB,EAAyC;AAACI,gBAAS,KAAV;AAAiBC,gBAAU;AAA3B,KAAzC,CCKE;ADN2B,GAA9B;;AAGA/B,SAAOgC,OAAP,CAAe;ACWZ,WDVFC,EAAEC,QAAF,EAAYC,OAAZ,CAAoB,UAACC,CAAD;AACnB,UAAGA,EAAEC,OAAF,KAAa,IAAb,IAAqBD,EAAEE,GAAF,KAAS,OAAjC;AACC,YAAGL,EAAE,aAAF,EAAiBM,MAAjB,KAA2B,CAA9B;AACC;ACWI;;ADVL,YAAGH,EAAEI,MAAF,CAASC,OAAT,KAAoB,UAApB,IAAkCR,EAAEG,EAAEI,MAAJ,EAAYE,OAAZ,CAAoB,KAApB,EAA2BC,QAA3B,CAAoC,qBAApC,CAArC;AACC,cAAGV,EAAE,aAAF,EAAiBM,MAAjB,KAA2B,CAA9B;ACYO,mBDXNN,EAAE,0BAAF,EAA8BW,KAA9B,ECWM;ADbR;AAHD;ACmBI;ADpBL,MCUE;ADXH;ACwBA;;ADfD,IAAG5C,OAAO6C,QAAV;AACC9C,eAAa+C,sBAAb,GAAsC,UAACC,OAAD,EAAUC,GAAV,EAAeC,UAAf;AAYrC,QAAGA,UAAH;AACC,UAAGpC,QAAQqC,aAAR,CAAsB,SAAtB,EAAiCC,IAAjC,CAAsC;AAAEC,aAAKH,UAAP;AAAmB7C,eAAO2C;AAA1B,OAAtC,EAA2EM,KAA3E,OAAsF,CAAzF;AACC,eAAO,KAAP;AAFF;ACaG;;ADTH,WAAO,IAAP;AAhBqC,GAAtC;AC4BA,C;;;;;;;;;;;;AC5DD,IAAAC,eAAA;AAAEA,kBAAoBC,QAAQ,mBAAR,EAAAD,eAApB;AACFtD,OAAOwD,OAAP,CACC;AAAAC,aAAW,UAACV,OAAD,EAAUW,MAAV,EAAkBC,OAAlB;AACV,WAAOL,gBAAgBG,SAAhB,CAA0BG,KAA1B,CAAgC,IAAhC,EAAsCC,SAAtC,CAAP;AADD;AAAA,CADD,E;;;;;;;;;;;;ACDA,IAAAP,eAAA;AAAEA,kBAAoBC,QAAQ,mBAAR,EAAAD,eAApB;AACFtD,OAAOwD,OAAP,CACC;AAAAM,wBAAsB,UAACH,OAAD;AACrB,WAAOL,gBAAgBQ,oBAAhB,CAAqCF,KAArC,CAA2C,IAA3C,EAAiDC,SAAjD,CAAP;AADD;AAGAE,8BAA4B,UAACC,OAAD,EAAUC,4BAAV,EAAwCC,UAAxC,EAAoDC,kBAApD,EAAwEC,2BAAxE,EAAqGC,8BAArG;AAC3B,WAAOf,gBAAgBS,0BAAhB,CAA2CH,KAA3C,CAAiD,IAAjD,EAAuDC,SAAvD,CAAP;AAJD;AAAA,CADD,E;;;;;;;;;;;;;;;;;;;;;;;;ACDAS;AAAA,IAAAA,QAAA,EAAA7D,GAAA,EAAA8D,IAAA,EAAAC,IAAA,EAAAC,UAAA;AACAA,aAAa,WAAb;;AACA,MAAAhE,MAAAT,OAAA0E,QAAA,WAAAC,GAAA,YAAAlE,IAA+BmE,KAA/B,GAA+B,MAA/B,MAAwC,KAAxC;AACI,MAAG5E,OAAOC,QAAV;AACIqE,eAAW,IAAIO,GAAGC,KAAH,CAASC,GAAb,CAAiBN,UAAjB,CAAX;AADJ,SAEK,IAAGzE,OAAO6C,QAAV;AACDyB,eAAW,IAAIO,GAAGC,KAAH,CAASC,GAAb,CAAiBN,UAAjB,EAA6BzE,OAAO0E,QAAP,CAAgBC,GAAhB,CAAoBK,MAAjD,CAAX;AAJR;AAAA,OAMK,MAAAT,OAAAvE,OAAA0E,QAAA,WAAAC,GAAA,YAAAJ,KAA+BK,KAA/B,GAA+B,MAA/B,MAAwC,IAAxC;AACD,MAAG5E,OAAOC,QAAV;AACIqE,eAAW,IAAIO,GAAGC,KAAH,CAASG,EAAb,CAAgBR,UAAhB,CAAX;AADJ,SAEK,IAAGzE,OAAO6C,QAAV;AACDyB,eAAW,IAAIO,GAAGC,KAAH,CAASG,EAAb,CAAgBR,UAAhB,EAA4BzE,OAAO0E,QAAP,CAAgBC,GAAhB,CAAoBO,GAAhD,CAAX;AAJH;AAAA,OAMA,MAAAV,OAAAxE,OAAA0E,QAAA,WAAAC,GAAA,YAAAH,KAA+BI,KAA/B,GAA+B,MAA/B,MAAwC,cAAxC;AACD,MAAG5E,OAAOC,QAAV;AACIqE,eAAW,IAAIO,GAAGC,KAAH,CAASK,YAAb,CAA0BV,UAA1B,CAAX;AADJ,SAEK,IAAGzE,OAAO6C,QAAV;AACDyB,eAAW,IAAIO,GAAGC,KAAH,CAASK,YAAb,CAA0BV,UAA1B,EAAsCzE,OAAO0E,QAAP,CAAgBC,GAAhB,CAAoBS,YAA1D,CAAX;AAJH;AAAA;AAMD,MAAGpF,OAAOC,QAAV;AACIqE,eAAW,IAAIO,GAAGC,KAAH,CAASO,UAAb,CAAwBZ,UAAxB,CAAX;AADJ,SAEK,IAAGzE,OAAO6C,QAAV;AACDyB,eAAW,IAAIO,GAAGC,KAAH,CAASO,UAAb,CAAwBZ,UAAxB,EAAoC;AACvCa,YAAM/B,QAAQ,MAAR,EAAgBgC,IAAhB,CAAqBC,QAAQC,GAAR,CAAYC,mBAAjC,EAAsD,WAASjB,UAA/D,CADiC;AAEvCkB,oBAAc,UAACC,OAAD;AAEV,YAAAC,YAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,eAAA,EAAAC,cAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAA7E,IAAA,EAAA8E,UAAA,EAAAC,GAAA,EAAAhB,IAAA,EAAAiB,QAAA,EAAA3B,KAAA,EAAA4B,IAAA;AAAA5B,gBAAQgB,WAAYA,QAAQa,QAAR,CAAiBhC,UAAjB,CAApB;;AAEA,YAAGG,SAAUA,MAAMtC,GAAnB;AACI,iBAAOsC,MAAMtC,GAAb;ACIf;;ADAWyD,mBAAWH,QAAQrE,IAAR,EAAX;AACAyE,0BAAkBJ,QAAQrE,IAAR,CAAa;AAACqD,iBAAOH;AAAR,SAAb,CAAlB;AAEAlD,eAAOyE,mBAAmBD,QAA1B;AAEAM,qBAAa9E,KAAKmF,KAAL,CAAW,GAAX,CAAb;AACAZ,oBAAYO,WAAWM,GAAX,EAAZ;AAEAV,yBAAiBI,WAAWd,IAAX,CAAgB,GAAhB,EAAqBqB,SAArB,CAA+B,CAA/B,EAAiC,EAAjC,IAAuC,GAAvC,GAA6Cd,SAA9D;AAEAQ,cAAM,IAAIO,IAAJ,EAAN;AACAL,eAAOF,IAAIQ,WAAJ,EAAP;AACAV,gBAAQE,IAAIS,QAAJ,KAAiB,CAAzB;AACAb,iBAASN,QAAQoB,QAAR,CAAiBC,QAA1B;AAEA3B,eAAO/B,QAAQ,MAAR,CAAP;AACA4C,iBAAS5C,QAAQ,QAAR,CAAT;AACAgD,mBAAWjB,KAAKC,IAAL,CAAUC,QAAQC,GAAR,CAAYC,mBAAtB,EAA2C,WAASjB,UAAT,GAAoB,GAApB,GAAyB+B,IAAzB,GAAgC,GAAhC,GAAsCJ,KAAtC,GAA8C,GAA9C,GAAoDF,MAA/F,CAAX;AAEAL,uBAAeP,KAAK4B,OAAL,CAAaX,QAAb,CAAf;AAEAJ,eAAOgB,IAAP,CAAYtB,YAAZ;AAGA,eAAOW,OAAO,GAAP,GAAaJ,KAAb,GAAqB,GAArB,GAA2BF,MAA3B,GAAoC,GAApC,GAA0CN,QAAQwB,cAAlD,GAAmE,GAAnE,GAAyExB,QAAQxC,GAAjF,GAAuF,GAAvF,GAA6F6C,cAApG;AAnCmC;AAAA,KAApC,CAAX;AATH;AC0CJ;;ADMDtB,IAAIF,UAAJ,IAAkB,IAAII,GAAGwC,UAAP,CAAkB5C,UAAlB,EACd;AAAA6C,UAAQ,CAAChD,QAAD;AAAR,CADc,CAAlB;AAGAK,IAAIF,UAAJ,EAAgB8C,KAAhB,CACI;AAAAC,YAAU;AACN,WAAO,IAAP;AADJ;AAAA,CADJ,E","file":"/packages/steedos_app-workflow.js","sourcesContent":["import {\n\tcheckNpmVersions\n} from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n\teval: \">=0.1.2\",\n}, 'steedos:app-workflow');","@WorkflowCore = {}\n\nif Meteor.isClient\n\tWorkflowCore.openFlowDesign = (locale, space, flow, companyId)->\n\t\turl = \"/applications/designer/current/#{locale.toLocaleLowerCase()}/?spaceId=#{space}\"\n\t\tif flow\n\t\t\turl = url + \"&flowId=#{flow}\"\n\t\tif companyId && !Creator.isSpaceAdmin(space, Meteor.userId())\n\t\t\turl = url + \"&companyId=#{companyId}\"\n\t\t\n\t\turl = encodeURIComponent(Steedos.absoluteUrl(url))\n\t\ttitle = \"#{t(\"Workflow Designer\")}\"\n\t\tif flow\n\t\t\tflowName = db.flows.findOne(flow)?.name\n\t\t\tif flowName\n\t\t\t\ttitle = \"#{flowName} | #{title}\"\n\t\ttitle = encodeURIComponent(title)\n\t\tiframe_url = \"/api/workflow/designer?url=#{url}&title=#{title}\"\n\t\tSteedos.openWindow Steedos.absoluteUrl(iframe_url)\n\tWorkflowCore.openFormDesign = (locale, space, form, companyId)->\n\t\tModal.show('formDesign', {formId: form}, {keyboard:false, backdrop: \"static\"})\n\n\tMeteor.startup ->\n\t\t$(document).keydown (e) ->\n\t\t\tif e.keyCode == \"13\" or e.key == \"Enter\"\n\t\t\t\tif $(\".flow-modal\").length != 1\n\t\t\t\t\treturn;\n\t\t\t\tif e.target.tagName != \"TEXTAREA\" or $(e.target).closest(\"div\").hasClass(\"bootstrap-tagsinput\")\n\t\t\t\t\tif $(\".flow-modal\").length == 1\n\t\t\t\t\t\t$(\".flow-modal .btn-confirm\").click()\n\nif Meteor.isServer\n\tWorkflowCore.checkCreatePermissions = (spaceId, uid, company_id)->\n#\t\tpermissions = Creator.getObjectPermissions(spaceId, uid, 'flows')\n#\n#\t\tif !permissions.allowCreate\n#\t\t\treturn false\n#\n#\t\t# 如果不是工作区管理员, 则必须要指定company_id\n#\t\tif !Steedos.isSpaceAdmin(spaceId, uid)\n#\t\t\tuserCompanyId = Creator.getUserCompanyId(uid, spaceId)\n#\t\t\tif !company_id || !userCompanyId || company_id != userCompanyId\n#\t\t\t\treturn false\n\n\t\tif company_id\n\t\t\tif Creator.getCollection(\"company\").find({ _id: company_id, space: spaceId }).count() == 0\n\t\t\t\treturn false\n\n\t\treturn true","this.WorkflowCore = {};\n\nif (Meteor.isClient) {\n  WorkflowCore.openFlowDesign = function(locale, space, flow, companyId) {\n    var flowName, iframe_url, ref, title, url;\n    url = \"/applications/designer/current/\" + (locale.toLocaleLowerCase()) + \"/?spaceId=\" + space;\n    if (flow) {\n      url = url + (\"&flowId=\" + flow);\n    }\n    if (companyId && !Creator.isSpaceAdmin(space, Meteor.userId())) {\n      url = url + (\"&companyId=\" + companyId);\n    }\n    url = encodeURIComponent(Steedos.absoluteUrl(url));\n    title = \"\" + (t(\"Workflow Designer\"));\n    if (flow) {\n      flowName = (ref = db.flows.findOne(flow)) != null ? ref.name : void 0;\n      if (flowName) {\n        title = flowName + \" | \" + title;\n      }\n    }\n    title = encodeURIComponent(title);\n    iframe_url = \"/api/workflow/designer?url=\" + url + \"&title=\" + title;\n    return Steedos.openWindow(Steedos.absoluteUrl(iframe_url));\n  };\n  WorkflowCore.openFormDesign = function(locale, space, form, companyId) {\n    return Modal.show('formDesign', {\n      formId: form\n    }, {\n      keyboard: false,\n      backdrop: \"static\"\n    });\n  };\n  Meteor.startup(function() {\n    return $(document).keydown(function(e) {\n      if (e.keyCode === \"13\" || e.key === \"Enter\") {\n        if ($(\".flow-modal\").length !== 1) {\n          return;\n        }\n        if (e.target.tagName !== \"TEXTAREA\" || $(e.target).closest(\"div\").hasClass(\"bootstrap-tagsinput\")) {\n          if ($(\".flow-modal\").length === 1) {\n            return $(\".flow-modal .btn-confirm\").click();\n          }\n        }\n      }\n    });\n  });\n}\n\nif (Meteor.isServer) {\n  WorkflowCore.checkCreatePermissions = function(spaceId, uid, company_id) {\n    if (company_id) {\n      if (Creator.getCollection(\"company\").find({\n        _id: company_id,\n        space: spaceId\n      }).count() === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n","{ workflowMethods } = require('@steedos/workflow')\nMeteor.methods\n\tflow_copy: (spaceId, flowId, options)->\n\t\treturn workflowMethods.flow_copy.apply(this, arguments)","{ workflowMethods } = require('@steedos/workflow')\nMeteor.methods\n\tget_distribute_flows: (options) ->\n\t\treturn workflowMethods.get_distribute_flows.apply(this, arguments)\n\n\tupdate_distribute_settings: (flow_id, distribute_optional_users_id, step_flows, distribute_to_self, distribute_end_notification, upload_after_being_distributed) ->\n\t\treturn workflowMethods.update_distribute_settings.apply(this, arguments)\n","fs_store\nstore_name = \"instances\"\nif Meteor.settings.public.cfs?.store == \"OSS\"\n    if Meteor.isClient\n        fs_store = new FS.Store.OSS(store_name)\n    else if Meteor.isServer\n        fs_store = new FS.Store.OSS store_name, Meteor.settings.cfs.aliyun\n\nelse if Meteor.settings.public.cfs?.store == \"S3\"\n    if Meteor.isClient\n        fs_store = new FS.Store.S3(store_name)\n    else if Meteor.isServer\n        fs_store = new FS.Store.S3 store_name, Meteor.settings.cfs.aws\n\nelse if Meteor.settings.public.cfs?.store == \"STEEDOSCLOUD\"\n    if Meteor.isClient\n        fs_store = new FS.Store.STEEDOSCLOUD(store_name)\n    else if Meteor.isServer\n        fs_store = new FS.Store.STEEDOSCLOUD store_name, Meteor.settings.cfs.steedosCloud\nelse\n    if Meteor.isClient\n        fs_store = new FS.Store.FileSystem(store_name)\n    else if Meteor.isServer\n        fs_store = new FS.Store.FileSystem(store_name, {\n                path: require('path').join(process.env.STEEDOS_STORAGE_DIR, \"files/#{store_name}\"),\n                fileKeyMaker: (fileObj)->\n                    # Lookup the copy\n                    store = fileObj and fileObj._getInfo(store_name)\n                    # If the store and key is found return the key\n                    if store and store.key\n                        return store.key\n\n                    # TO CUSTOMIZE, REPLACE CODE AFTER THIS POINT\n\n                    filename = fileObj.name();\n                    filenameInStore = fileObj.name({store: store_name})\n\n                    name = filenameInStore || filename\n\n                    name_split = name.split('.')\n                    extention = name_split.pop()\n\n                    final_filename = name_split.join('.').substring(0,50) + '.' + extention\n\n                    now = new Date\n                    year = now.getFullYear()\n                    month = now.getMonth() + 1\n                    ins_id = fileObj.metadata.instance\n\n                    path = require('path')\n                    mkdirp = require('mkdirp')\n                    pathname = path.join(process.env.STEEDOS_STORAGE_DIR, \"files/#{store_name}/\" + year + '/' + month + '/' + ins_id)\n                    # Set absolute path\n                    absolutePath = path.resolve(pathname)\n                    # Ensure the path exists\n                    mkdirp.sync(absolutePath)\n\n                    # If no store key found we resolve / generate a key\n                    return year + '/' + month + '/' + ins_id + '/' + fileObj.collectionName + '-' + fileObj._id + '-' + final_filename\n\n            })\n\ncfs[store_name] = new FS.Collection store_name,\n    stores: [fs_store]\n\ncfs[store_name].allow\n    download: ->\n        return true;\n\n","fs_store;\nvar fs_store, ref, ref1, ref2, store_name;\n\nstore_name = \"instances\";\n\nif (((ref = Meteor.settings[\"public\"].cfs) != null ? ref.store : void 0) === \"OSS\") {\n  if (Meteor.isClient) {\n    fs_store = new FS.Store.OSS(store_name);\n  } else if (Meteor.isServer) {\n    fs_store = new FS.Store.OSS(store_name, Meteor.settings.cfs.aliyun);\n  }\n} else if (((ref1 = Meteor.settings[\"public\"].cfs) != null ? ref1.store : void 0) === \"S3\") {\n  if (Meteor.isClient) {\n    fs_store = new FS.Store.S3(store_name);\n  } else if (Meteor.isServer) {\n    fs_store = new FS.Store.S3(store_name, Meteor.settings.cfs.aws);\n  }\n} else if (((ref2 = Meteor.settings[\"public\"].cfs) != null ? ref2.store : void 0) === \"STEEDOSCLOUD\") {\n  if (Meteor.isClient) {\n    fs_store = new FS.Store.STEEDOSCLOUD(store_name);\n  } else if (Meteor.isServer) {\n    fs_store = new FS.Store.STEEDOSCLOUD(store_name, Meteor.settings.cfs.steedosCloud);\n  }\n} else {\n  if (Meteor.isClient) {\n    fs_store = new FS.Store.FileSystem(store_name);\n  } else if (Meteor.isServer) {\n    fs_store = new FS.Store.FileSystem(store_name, {\n      path: require('path').join(process.env.STEEDOS_STORAGE_DIR, \"files/\" + store_name),\n      fileKeyMaker: function(fileObj) {\n        var absolutePath, extention, filename, filenameInStore, final_filename, ins_id, mkdirp, month, name, name_split, now, path, pathname, store, year;\n        store = fileObj && fileObj._getInfo(store_name);\n        if (store && store.key) {\n          return store.key;\n        }\n        filename = fileObj.name();\n        filenameInStore = fileObj.name({\n          store: store_name\n        });\n        name = filenameInStore || filename;\n        name_split = name.split('.');\n        extention = name_split.pop();\n        final_filename = name_split.join('.').substring(0, 50) + '.' + extention;\n        now = new Date;\n        year = now.getFullYear();\n        month = now.getMonth() + 1;\n        ins_id = fileObj.metadata.instance;\n        path = require('path');\n        mkdirp = require('mkdirp');\n        pathname = path.join(process.env.STEEDOS_STORAGE_DIR, (\"files/\" + store_name + \"/\") + year + '/' + month + '/' + ins_id);\n        absolutePath = path.resolve(pathname);\n        mkdirp.sync(absolutePath);\n        return year + '/' + month + '/' + ins_id + '/' + fileObj.collectionName + '-' + fileObj._id + '-' + final_filename;\n      }\n    });\n  }\n}\n\ncfs[store_name] = new FS.Collection(store_name, {\n  stores: [fs_store]\n});\n\ncfs[store_name].allow({\n  download: function() {\n    return true;\n  }\n});\n"]}