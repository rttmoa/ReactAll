{"version":3,"sources":["meteor://💻app/packages/steedos_objects-billing/models/billings.coffee","meteor://💻app/models/billings.coffee","meteor://💻app/packages/steedos_objects-billing/models/billing_pay_records.coffee","meteor://💻app/models/billing_pay_records.coffee","meteor://💻app/packages/steedos_objects-billing/models/modules.coffee","meteor://💻app/packages/steedos_objects-billing/models/modules_changelogs.coffee","meteor://💻app/packages/steedos_objects-billing/models/users_changelogs.coffee","meteor://💻app/models/users_changelogs.coffee","meteor://💻app/packages/steedos_objects-billing/models/steedos_statistics.coffee"],"names":["db","billings","Meteor","Collection","helpers","transaction_i18n","d","t","transaction","TAPi18n","__","isServer","_ensureIndex","background","billing_pay_records","order_created","moment","created","format","order_paid","paid","order_total_fee","total_fee","toString","Creator","Objects","name","label","icon","fields","info","type","blackbox","omit","hidden","defaultValue","modules","end_date","user_count","list_views","all","filter_scope","columns","permission_set","user","allowCreate","allowDelete","allowEdit","allowRead","modifyAllRecords","viewAllRecords","admin","modules_changelogs","users_changelogs","_simpleSchema","SimpleSchema","change_date","Date","operator","String","space","operation","Number","created_by","before","insert","userId","doc","steedos_statistics"],"mappings":"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","file":"/packages/steedos_objects-billing.js","sourcesContent":["db.billings = new Meteor.Collection('billings')\n\n\ndb.billings.helpers\n\ttransaction_i18n: ()->\n\t\tt = this.transaction\n\t\td = \"\"\n\t\tif t is \"Starting balance\"\n\t\t\td = TAPi18n.__('billing_tranDetail.starting')\n\t\telse if t is \"Payment\"\n\t\t\td = TAPi18n.__('billing_tranDetail.payment')\n\t\telse if t is \"Service adjustment\"\n\t\t\td = TAPi18n.__('billing_tranDetail.adjustment')\n\t\telse if t is \"workflow\"\n\t\t\td = TAPi18n.__('billing_tranDetail.workflow')\n\t\telse if t is \"workflow.professional\"\n\t\t\td = TAPi18n.__('billing_tranDetail.workflow')\n\t\telse if t is \"chat.professional\"\n\t\t\td = TAPi18n.__('billing_tranDetail.chat')\n\t\telse\n\t\t\td = t\n\n\t\treturn d\n\nif Meteor.isServer\n\tdb.billings._ensureIndex({\n\t\t\"space\": 1\n\t},{background: true})","db.billings = new Meteor.Collection('billings');\n\ndb.billings.helpers({\n  transaction_i18n: function() {\n    var d, t;\n    t = this.transaction;\n    d = \"\";\n    if (t === \"Starting balance\") {\n      d = TAPi18n.__('billing_tranDetail.starting');\n    } else if (t === \"Payment\") {\n      d = TAPi18n.__('billing_tranDetail.payment');\n    } else if (t === \"Service adjustment\") {\n      d = TAPi18n.__('billing_tranDetail.adjustment');\n    } else if (t === \"workflow\") {\n      d = TAPi18n.__('billing_tranDetail.workflow');\n    } else if (t === \"workflow.professional\") {\n      d = TAPi18n.__('billing_tranDetail.workflow');\n    } else if (t === \"chat.professional\") {\n      d = TAPi18n.__('billing_tranDetail.chat');\n    } else {\n      d = t;\n    }\n    return d;\n  }\n});\n\nif (Meteor.isServer) {\n  db.billings._ensureIndex({\n    \"space\": 1\n  }, {\n    background: true\n  });\n}\n","db.billing_pay_records = new Meteor.Collection('billing_pay_records')\n\ndb.billing_pay_records.helpers\n\torder_created: ()->\n\t\treturn moment(this.created).format('YYYY-MM-DD HH:mm:ss')\n\n\torder_paid: ()->\n\t\treturn if this.paid then TAPi18n.__(\"billing.has_paid\") else TAPi18n.__(\"billing.not_paid\")\n\n\torder_total_fee: ()->\n\t\treturn (this.total_fee/100).toString()\n\nCreator.Objects.billing_pay_records = \n\tname: \"billing_pay_records\"\n\tlabel: \"订单\"\n\ticon: \"apps\"\n\tfields:\n\t\tinfo:\n\t\t\tlabel:\"详单详情\"\n\t\t\ttype: \"object\"\n\t\t\tblackbox: true\n\t\t\tomit: true\n\t\t\thidden: true\n\t\t\n\t\ttotal_fee:\n\t\t\tlabel:\"金额￥\"\n\t\t\ttype: \"number\"\n\t\t\tdefaultValue: 100\n\t\t\tomit: true\n\t\t\n\t\tpaid:\n\t\t\tlabel:\"已付款\"\n\t\t\ttype: \"boolean\"\n\t\t\tomit: true\n\t\t\tdefaultValue: false\n\t\t\n\t\tmodules:\n\t\t\tlabel:\"模块\"\n\t\t\ttype: \"[text]\"\n\t\t\tblackbox: true\n\t\t\tomit: true\n\t\t\n\t\tend_date:\n\t\t\tlabel:\"租用日期至\"\n\t\t\ttype: \"date\"\n\t\t\tomit: true\n\t\t\n\t\tuser_count:\n\t\t\tlabel:\"名额\"\n\t\t\ttype: \"number\"\n\t\t\tomit: true\n\n\tlist_views:\n\t\tall:\n\t\t\tlabel: \"所有\"\n\t\t\tfilter_scope: \"space\"\n\t\t\tcolumns: [\"modules\", \"user_count\", \"end_date\", \"total_fee\", \"paid\", \"created\"]\n\t\n\tpermission_set:\n\t\tuser:\n\t\t\tallowCreate: false\n\t\t\tallowDelete: false\n\t\t\tallowEdit: false\n\t\t\tallowRead: false\n\t\t\tmodifyAllRecords: false\n\t\t\tviewAllRecords: false \n\t\tadmin:\n\t\t\tallowCreate: false\n\t\t\tallowDelete: false\n\t\t\tallowEdit: false\n\t\t\tallowRead: true\n\t\t\tmodifyAllRecords: false\n\t\t\tviewAllRecords: true","db.billing_pay_records = new Meteor.Collection('billing_pay_records');\n\ndb.billing_pay_records.helpers({\n  order_created: function() {\n    return moment(this.created).format('YYYY-MM-DD HH:mm:ss');\n  },\n  order_paid: function() {\n    if (this.paid) {\n      return TAPi18n.__(\"billing.has_paid\");\n    } else {\n      return TAPi18n.__(\"billing.not_paid\");\n    }\n  },\n  order_total_fee: function() {\n    return (this.total_fee / 100).toString();\n  }\n});\n\nCreator.Objects.billing_pay_records = {\n  name: \"billing_pay_records\",\n  label: \"订单\",\n  icon: \"apps\",\n  fields: {\n    info: {\n      label: \"详单详情\",\n      type: \"object\",\n      blackbox: true,\n      omit: true,\n      hidden: true\n    },\n    total_fee: {\n      label: \"金额￥\",\n      type: \"number\",\n      defaultValue: 100,\n      omit: true\n    },\n    paid: {\n      label: \"已付款\",\n      type: \"boolean\",\n      omit: true,\n      defaultValue: false\n    },\n    modules: {\n      label: \"模块\",\n      type: \"[text]\",\n      blackbox: true,\n      omit: true\n    },\n    end_date: {\n      label: \"租用日期至\",\n      type: \"date\",\n      omit: true\n    },\n    user_count: {\n      label: \"名额\",\n      type: \"number\",\n      omit: true\n    }\n  },\n  list_views: {\n    all: {\n      label: \"所有\",\n      filter_scope: \"space\",\n      columns: [\"modules\", \"user_count\", \"end_date\", \"total_fee\", \"paid\", \"created\"]\n    }\n  },\n  permission_set: {\n    user: {\n      allowCreate: false,\n      allowDelete: false,\n      allowEdit: false,\n      allowRead: false,\n      modifyAllRecords: false,\n      viewAllRecords: false\n    },\n    admin: {\n      allowCreate: false,\n      allowDelete: false,\n      allowEdit: false,\n      allowRead: true,\n      modifyAllRecords: false,\n      viewAllRecords: true\n    }\n  }\n};\n","db.modules = new Meteor.Collection('modules')","db.modules_changelogs = new Meteor.Collection('modules_changelogs')","db.users_changelogs = new Meteor.Collection('users_changelogs')\n\ndb.users_changelogs._simpleSchema = new SimpleSchema\n  # 日期，记录事件发生的时间，格式：YYYYMMDD\n  change_date:\n    type: Date\n  # 操作者\n  operator:\n    type: String\n  # 工作区\n  space:\n    type: String\n  # add（增加）delete（删除）enable（启用）disable（停用）\n  operation:\n    type: String\n  # 对象，user_id\n  user:\n    type: String\n  # 工作区中启用的用户数\n  user_count:\n    type: Number\n  # 创建时间\n  created:\n    type: Date\n  # 创建人\n  created_by:\n    type: String\n\n\nif Meteor.isServer\n  db.users_changelogs.before.insert (userId, doc) ->\n    doc.change_date = moment().format('YYYYMMDD');\n    doc.created = new Date();\n    doc.created_by = userId;\n\n","db.users_changelogs = new Meteor.Collection('users_changelogs');\n\ndb.users_changelogs._simpleSchema = new SimpleSchema({\n  change_date: {\n    type: Date\n  },\n  operator: {\n    type: String\n  },\n  space: {\n    type: String\n  },\n  operation: {\n    type: String\n  },\n  user: {\n    type: String\n  },\n  user_count: {\n    type: Number\n  },\n  created: {\n    type: Date\n  },\n  created_by: {\n    type: String\n  }\n});\n\nif (Meteor.isServer) {\n  db.users_changelogs.before.insert(function(userId, doc) {\n    doc.change_date = moment().format('YYYYMMDD');\n    doc.created = new Date();\n    return doc.created_by = userId;\n  });\n}\n","db.steedos_statistics = new Meteor.Collection('steedos_statistics')\n"]}