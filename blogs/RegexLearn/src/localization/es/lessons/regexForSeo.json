{
  "lesson.regexForSeo.starter.title": "Regex para SEO",
  "lesson.regexForSeo.starter.description": "Regex es un conjunto de expresiones regulares que son usadas con frecuencia en muchas área, especialmente por personas que desean aumentar su productividad. Las ventajas de usar Regex para SEO son que este facilita el análisis de grandes volúmenes de información y la escritura de filtros más completos. Te recomendamos comenzar con el tutorial `Regex 101` si eres nuevo en Regex. \\n\\nEmpieza escribiendo `OK` en el campo de Regex para proceder con los primeros pasos y acceder a una explicación más detallada.",

  "lesson.regexForSeo.usage.title": "Casos de Uso",
  "lesson.regexForSeo.usage.description": "Puedes usar Regex para SEO en plataformas como `Google Analytics`, `Google Data Studio`, `Google Sheets`, `Google Search Console`, `Ahrefs`, `Deepcrawl`, `Screaming Frog`. También es usado frecuentemente en archivos `.htaccess` y `robots.txt (regex-like syntax)`.\\n\\nA continuación, se muestra un ejemplo de regex que seleccionara de la lista solo los textos que empiecen con `Google`.",

  "lesson.regexForSeo.basics.title": "Fundamentos",
  "lesson.regexForSeo.basics.description": "Echemos un vistazo a algunos Regex que usaras frecuentemente. Te recomendamos que revises el tutorial `Regex 101` para aprender más sobre esto. Escribe `Yes` para empezar.",

  "lesson.regexForSeo.or.title": "Operador Or `|`",
  "lesson.regexForSeo.or.description": "Usamos el operador Or `|` para filtrar múltiples expresiones. Por ejemplo, filtra el texto que contiene `seo` y `regex` escribiendo las dos palabras separadas por el operador Or `|`.",

  "lesson.regexForSeo.optional.title": "Operador Opcional `?`",
  "lesson.regexForSeo.optional.description": "Lo usamos para expresar que una expresión o un carácter es opcional. Por ejemplo, queremos filtrar el texto que contiene ambos `http` y `https`. Podemos usar el operador Or `|` para esta operación, pero hay una mejor manera para estas dos palabras casi idénticas.\\n\\nEn este ejemplo, la letra `s` es opcional. En cambio agrega un signo el interrogación `?` al lado de la letra `s`.",

  "lesson.regexForSeo.any.title": "Comodín `.*`",
  "lesson.regexForSeo.any.description": "En regex, el punto `.` puede corresponder a cualquier carácter, incluyendo espacios. Pero esta coincidencia es solo para un carácter individual en donde se use. El carácter asterisco `*` significa que el elemento que sigue no existe o que aparece más de una vez en el texto. Cuando los dos se usan juntos, significa que donde se use puede haber un elemento de longitud ilimitada.\\n\\nA continuación hay varias palabras clave. Añade `.*` al final del regex para escribir una expresión que empiece con `how to write` y coincida con todo lo que le sigue.",
  "lesson.regexForSeo.contains.title": "Contiene",
  "lesson.regexForSeo.contains.description": "Para filtrar las palabras o frases que contiene las palabras que buscamos, escribimos la palabra que estamos buscando entre dos expresiones `.*` para que coincida con todo. Por ejemplo, escribe `.*buy.*` para filtrar todo lo que incluye `buy`.",

  "lesson.regexForSeo.negated.title": "Negación de un conjunto de caracteres `[^abc]`",
  "lesson.regexForSeo.negated.description": "Usamos la negación de un conjunto de caracteres `[^]` para indicar los caracteres que no necesitamos que sean incluidos. Los caracteres que no necesitamos que sean incluidos son escritos entre corchetes con un signo de intercalación al principio. A continuación, están ambos `http` y `https`. Como `http` aparece en ambos, también seleccionara `https`. Escribe `[^s]` después de la letra `p` para excluir la letra `s`.",

  "lesson.regexForSeo.caret.title": "Signo de Intercalación `^`",
  "lesson.regexForSeo.caret.description": "Digamos que tenemos una lista de URL y necesitamos encontrar solo las URL que empiezan con `http`. Pero las URL también contienen `http` en diferentes partes ademas del principio. Entonces agregamos un signo de intercalación `^` al principio de la siguiente expresión para filtrar solo las que empiezan con `http`.",

  "lesson.regexForSeo.dollarAndEscape.title": "Signo de Dólar `$` y Carácter de Escape `\\`",
  "lesson.regexForSeo.dollarAndEscape.description": "Nuevamente tenemos una lista de URL. Necesitamos encontrar solo aquellas URL que terminan en `.htm`.\\n\\nComo el punto `.` es un carácter especial que coincide con todo, primero necesitamos deshabilitar el punto antes de `htm` usando el carácter de escape `\\`. Esto aplica para todos los caracteres especiales.\\n\\nLuego agregamos un signo `$` al final de la expresión. Esto asegura que el texto a ser filtrado termina con la expresión escrita antes de este.",

  "lesson.regexForSeo.limitation.title": "Restricciones de Longitud `{n}`",
  "lesson.regexForSeo.limitation.description": "Quisiéramos filtrar los resultados por la longitud de caracteres. Por ejemplo, para filtrar las URL que tienen `35` caracteres de longitud, escribe el números que quieres usar de longitud, `{35}`, usando las llaves al lado del punto `.`.",

  "lesson.regexForSeo.maxLimitation.title": "Restricciones de Longitud (Máximo) `{n,m}`",
  "lesson.regexForSeo.maxLimitation.description": "Para filtrar las URL con una longitud maxima de `35` caracteres, escriba entre llaves los valores numéricos mínimo y máximo que usaremos para la longitud `{1,35}` al lado del punto `.`.",

  "lesson.regexForSeo.minLimitation.title": "Restricciones de Longitud (Mínimo) `{n,}`",
  "lesson.regexForSeo.minLimitation.description": "Para filtrar las URL con una longitud mínima de `35` caracteres, escriba entre llaves y al lado del punto `{35,}` el valor numérico mínimo que usaremos para la longitud con una coma.",

  "lesson.regexForSeo.robots.title": "robots.txt (sintaxis similar a regex)",
  "lesson.regexForSeo.robots.description": "Aquí hay un ejemplo simple del uso de regex en un archivo `robots.txt`. El ejemplo establece que los robots no pueden rastrear enlaces con la extensión `pdf`.",

  "lesson.regexForSeo.htaccess.title": ".htaccess",
  "lesson.regexForSeo.htaccess.description": "Aquí hay un ejemplo de uso de regex en el archivo `.htaccess`. En el ejemplo los enlaces con extensión `php` son dirigidos a extensiones `html` con código `301`.",

  "lesson.regexForSeo.outro.title": "Final",
  "lesson.regexForSeo.outro.description": "Conocer Regex es una habilidad que incrementa la productividad en cualquier plataforma que permita usar regex. Una vez que empieces a usar y a mejorar esta habilidad te ayudará a completar muchas tareas repetitivas rápidamente y te ahorrará tiempo para otras cosas. Para entender mejor los fundamentos de Regex puedes visitar el tutorial de `Regex 101`. Puedes usar la página de `Playground` para probar tus expresiones en tus propios textos."
}
